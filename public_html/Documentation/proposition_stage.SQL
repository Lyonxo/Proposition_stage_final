DROP DATABASE IF EXISTS proposition_stage;

CREATE DATABASE IF NOT EXISTS proposition_stage;
USE proposition_stage;

CREATE TABLE IF NOT EXISTS TYPE
 (
   TP_CODE DB_TEXT, 32 NOT NULL  ,
   TP_LIBELLE DB_TEXT, 32 NULL  
   , PRIMARY KEY (TP_CODE) 
 );

CREATE TABLE IF NOT EXISTS PROFESSEUR
 (
   PROF_NUM DB_TEXT, 32 NOT NULL  ,
   PROF_IDENTIFIANT DB_TEXT, 32 NULL  ,
   PROF_LOGIN DB_TEXT, 32 NULL  ,
   PROF_NOM DB_TEXT, 32 NULL  ,
   PRENOM DB_TEXT, 32 NULL  
   , PRIMARY KEY (PROF_NUM) 
 ) 
 comment = "";

CREATE TABLE IF NOT EXISTS ETAT
 (
   ET_CODE DB_TEXT, 32 NOT NULL  ,
   ET_LIBELLE DB_TEXT, 32 NULL  
   , PRIMARY KEY (ET_CODE) 
 ) 
 comment = "";


CREATE TABLE IF NOT EXISTS ENTREPRISE
 (
   ENT_NUM DB_TEXT, 32 NOT NULL  ,
   ET_CODE DB_TEXT, 32 NOT NULL  ,
   TP_CODE DB_TEXT, 32 NOT NULL  ,
   ENT_NOM DB_TEXT, 32 NULL  ,
   ENT_ADRESSE DB_TEXT, 32 NULL  ,
   ENT_TEL DB_TEXT, 32 NULL  ,
   ENT_MAIL DB_TEXT, 32 NULL  ,
   ENT_NOM_CORRESPONDANT DB_TEXT, 32 NULL  
   , PRIMARY KEY (ENT_NUM) 
 ) 
 comment = "";



CREATE  INDEX I_FK_ENTREPRISE_ETAT
     ON ENTREPRISE (ET_CODE ASC);

CREATE  INDEX I_FK_ENTREPRISE_TYPE
     ON ENTREPRISE (TP_CODE ASC);

CREATE TABLE IF NOT EXISTS PROPOSITION_STAGE
 (
   PROP_NUM DB_TEXT, 32 NOT NULL  ,
   ENT_NUM DB_TEXT, 32 NOT NULL  ,
   ET_CODE DB_TEXT, 32 NOT NULL  ,
   PROF_NUM DB_TEXT, 32 NOT NULL  ,
   PROP_INTITULE DB_TEXT, 32 NULL  ,
   PROP_DESCRIPTION_MISSION DB_TEXT, 32 NULL  ,
   PROP_COMPETENCE_RECHERCHE DB_TEXT, 32 NULL  
   , PRIMARY KEY (PROP_NUM) 
 ) 
 comment = "";


CREATE  INDEX I_FK_PROPOSITION_STAGE_ENTREPRISE
     ON PROPOSITION_STAGE (ENT_NUM ASC);

CREATE  INDEX I_FK_PROPOSITION_STAGE_ETAT
     ON PROPOSITION_STAGE (ET_CODE ASC);

CREATE  INDEX I_FK_PROPOSITION_STAGE_PROFESSEUR
     ON PROPOSITION_STAGE (PROF_NUM ASC);



ALTER TABLE ENTREPRISE 
  ADD FOREIGN KEY FK_ENTREPRISE_ETAT (ET_CODE)
      REFERENCES ETAT (ET_CODE) ;


ALTER TABLE ENTREPRISE 
  ADD FOREIGN KEY FK_ENTREPRISE_TYPE (TP_CODE)
      REFERENCES TYPE (TP_CODE) ;


ALTER TABLE PROPOSITION_STAGE 
  ADD FOREIGN KEY FK_PROPOSITION_STAGE_ENTREPRISE (ENT_NUM)
      REFERENCES ENTREPRISE (ENT_NUM) ;


ALTER TABLE PROPOSITION_STAGE 
  ADD FOREIGN KEY FK_PROPOSITION_STAGE_ETAT (ET_CODE)
      REFERENCES ETAT (ET_CODE) ;


ALTER TABLE PROPOSITION_STAGE 
  ADD FOREIGN KEY FK_PROPOSITION_STAGE_PROFESSEUR (PROF_NUM)
      REFERENCES PROFESSEUR (PROF_NUM) ;

